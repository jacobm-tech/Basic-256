# testsuite_binaryop_include section for BASIC256

# Modification History
# date		programmer	description
# 20160327	j.m.reneau	original coding

# this include tests binary operations on integers
# and type conversions

# to hex
call s("-1=ffffffff", tohex(-1), "ffffffff")
call s("2^31-1=7fffffff", tohex(2^31-1), "7fffffff")
call s("-(2^31)=80000000", tohex(-2^31), "80000000")
call s("0=0", tohex(0), "0")


## powers of 2 - twos compliment - not and or
for t = 1 to 31
   a = ~~(2^t-1)
   c = 0-a-1
   b = a & 0xffffffff
   d = c & 0xffffffff
   call n(a + "==" + b, a, b)
   call s("tohex(a)==tohex(b)", tohex(a), tohex(b))
   call n("fromhex(tohex(a))==a)", fromhex(tohex(a)),a)
   call n("typeof(a)==1", typeof(a), 1)
   call n("typeof(b)==1", typeof(b), 1)
   call n(c + "==" + d, c, d)
   call s("tohex(c)==tohex(d)", tohex(c), tohex(d))
   call n("fromhex(tohex(c))==c)", fromhex(tohex(c)),c)
   call n("typeof(c)==1", typeof(c), 1)
   call n("typeof(d)==1", typeof(d), 1)
   
   b = a | 0xffff
   b = b - 65535
   b = a | b
   call n("a=a|0xffff-65535|a", a,b)
   
next t


